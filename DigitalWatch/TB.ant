////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2007 Xilinx, Inc.
// All Right Reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 9.2i
//  \   \         Application : ISE
//  /   /         Filename : TB.ant
// /___/   /\     Timestamp : Tue May 15 23:31:51 2018
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: 
//Design Name: TB
//Device: Xilinx
//
`timescale 1ns/1ps

module TB;
    reg CLK = 1'b0;
    reg RST = 1'b0;
    reg StopWatch_on = 1'b0;
    reg StopWatch_off = 1'b0;
    reg Pomodoro_in = 1'b0;
    reg Calculator_in = 1'b0;
    reg Alarm_in = 1'b0;
    reg [3:0] ssec1 = 4'b0000;
    reg [3:0] ssec2 = 4'b0000;
    reg [3:0] mmin1 = 4'b0000;
    reg [3:0] mmin2 = 4'b0000;
    reg [3:0] hhour1 = 4'b0000;
    reg [3:0] hhour2 = 4'b0000;
    reg [3:0] dday1 = 4'b0000;
    reg [3:0] dday2 = 4'b0000;
    reg [3:0] mmonth1 = 4'b0000;
    reg [3:0] mmonth2 = 4'b0000;
    reg [3:0] yyear1 = 4'b0000;
    reg [3:0] yyear2 = 4'b0000;
    reg [3:0] yyear3 = 4'b0000;
    reg [3:0] yyear4 = 4'b0000;
    wire [3:0] sec1;
    wire [3:0] sec2;
    wire [3:0] min1;
    wire [3:0] min2;
    wire [3:0] hour1;
    wire [3:0] hour2;
    wire [3:0] day1;
    wire [3:0] day2;
    wire [3:0] month1;
    wire [3:0] month2;
    wire [3:0] year1;
    wire [3:0] year2;
    wire [3:0] year3;
    wire [3:0] year4;
    wire [3:0] sec1_s;
    wire [3:0] sec2_s;
    wire [3:0] min1_m;
    wire [3:0] min2_m;
    wire [3:0] hour1_h;
    wire [3:0] hour2_h;
    wire [3:0] seconds_study1;
    wire [3:0] seconds_study2;
    wire [3:0] minutes_study1;
    wire [3:0] minutes_study2;
    wire [3:0] seconds_break1;
    wire [3:0] seconds_break2;
    wire [3:0] minutes_break1;
    reg [3:0] min1_A = 4'b0000;
    reg [3:0] min2_A = 4'b0000;
    reg [3:0] hour1_A = 4'b0000;
    reg [3:0] hour2_A = 4'b0000;
    wire Buzz;

    parameter PERIOD = 200;
    parameter real DUTY_CYCLE = 0.5;
    parameter OFFSET = 100;

    initial    // Clock process for CLK
    begin
        #OFFSET;
        forever
        begin
            CLK = 1'b0;
            #(PERIOD-(PERIOD*DUTY_CYCLE)) CLK = 1'b1;
            #(PERIOD*DUTY_CYCLE);
        end
    end

    Collecting UUT (
        .CLK(CLK),
        .RST(RST),
        .StopWatch_on(StopWatch_on),
        .StopWatch_off(StopWatch_off),
        .Pomodoro_in(Pomodoro_in),
        .Calculator_in(Calculator_in),
        .Alarm_in(Alarm_in),
        .ssec1(ssec1),
        .ssec2(ssec2),
        .mmin1(mmin1),
        .mmin2(mmin2),
        .hhour1(hhour1),
        .hhour2(hhour2),
        .dday1(dday1),
        .dday2(dday2),
        .mmonth1(mmonth1),
        .mmonth2(mmonth2),
        .yyear1(yyear1),
        .yyear2(yyear2),
        .yyear3(yyear3),
        .yyear4(yyear4),
        .sec1(sec1),
        .sec2(sec2),
        .min1(min1),
        .min2(min2),
        .hour1(hour1),
        .hour2(hour2),
        .day1(day1),
        .day2(day2),
        .month1(month1),
        .month2(month2),
        .year1(year1),
        .year2(year2),
        .year3(year3),
        .year4(year4),
        .sec1_s(sec1_s),
        .sec2_s(sec2_s),
        .min1_m(min1_m),
        .min2_m(min2_m),
        .hour1_h(hour1_h),
        .hour2_h(hour2_h),
        .seconds_study1(seconds_study1),
        .seconds_study2(seconds_study2),
        .minutes_study1(minutes_study1),
        .minutes_study2(minutes_study2),
        .seconds_break1(seconds_break1),
        .seconds_break2(seconds_break2),
        .minutes_break1(minutes_break1),
        .min1_A(min1_A),
        .min2_A(min2_A),
        .hour1_A(hour1_A),
        .hour2_A(hour2_A),
        .Buzz(Buzz));

    integer TX_FILE = 0;
    integer TX_ERROR = 0;
    
    initial begin    // Annotation process for clock CLK
        #0;
        ANNOTATE_sec1;
        ANNOTATE_sec2;
        ANNOTATE_min1;
        ANNOTATE_min2;
        ANNOTATE_hour1;
        ANNOTATE_hour2;
        ANNOTATE_day1;
        ANNOTATE_day2;
        ANNOTATE_month1;
        ANNOTATE_month2;
        ANNOTATE_year1;
        ANNOTATE_year2;
        ANNOTATE_year3;
        ANNOTATE_year4;
        ANNOTATE_sec1_s;
        ANNOTATE_sec2_s;
        ANNOTATE_min1_m;
        ANNOTATE_min2_m;
        ANNOTATE_hour1_h;
        ANNOTATE_hour2_h;
        ANNOTATE_seconds_study1;
        ANNOTATE_seconds_study2;
        ANNOTATE_minutes_study1;
        ANNOTATE_minutes_study2;
        ANNOTATE_seconds_break1;
        ANNOTATE_seconds_break2;
        ANNOTATE_minutes_break1;
        ANNOTATE_Buzz;
        #OFFSET;
        forever begin
            #115;
            ANNOTATE_sec1;
            ANNOTATE_sec2;
            ANNOTATE_min1;
            ANNOTATE_min2;
            ANNOTATE_hour1;
            ANNOTATE_hour2;
            ANNOTATE_day1;
            ANNOTATE_day2;
            ANNOTATE_month1;
            ANNOTATE_month2;
            ANNOTATE_year1;
            ANNOTATE_year2;
            ANNOTATE_year3;
            ANNOTATE_year4;
            ANNOTATE_sec1_s;
            ANNOTATE_sec2_s;
            ANNOTATE_min1_m;
            ANNOTATE_min2_m;
            ANNOTATE_hour1_h;
            ANNOTATE_hour2_h;
            ANNOTATE_seconds_study1;
            ANNOTATE_seconds_study2;
            ANNOTATE_minutes_study1;
            ANNOTATE_minutes_study2;
            ANNOTATE_seconds_break1;
            ANNOTATE_seconds_break2;
            ANNOTATE_minutes_break1;
            ANNOTATE_Buzz;
            #85;
        end
    end

    initial begin  // Open the annotations file...
        TX_FILE = $fopen("C:\\Users\\HaBosh\\Desktop\\Dgital Watch\\DigitalWatch\\TB.ano");
        #1200 // Final time:  1200 ns
        $display("Success! Annotation Simulation Complete.");
        $fdisplay(TX_FILE, "Total[%d]", TX_ERROR);
        $fclose(TX_FILE);
        $finish;
    end

    initial begin
        // -------------  Current Time:  185ns
        #185;
        RST = 1'b1;
        // -------------------------------------
        // -------------  Current Time:  385ns
        #200;
        RST = 1'b0;
        // -------------------------------------
        // -------------  Current Time:  585ns
        #200;
        RST = 1'b1;
        // -------------------------------------
    end

    task ANNOTATE_sec1;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,sec1,%b]", $time, sec1);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_sec2;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,sec2,%b]", $time, sec2);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_min1;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,min1,%b]", $time, min1);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_min2;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,min2,%b]", $time, min2);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_hour1;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,hour1,%b]", $time, hour1);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_hour2;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,hour2,%b]", $time, hour2);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_day1;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,day1,%b]", $time, day1);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_day2;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,day2,%b]", $time, day2);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_month1;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,month1,%b]", $time, month1);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_month2;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,month2,%b]", $time, month2);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_year1;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,year1,%b]", $time, year1);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_year2;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,year2,%b]", $time, year2);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_year3;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,year3,%b]", $time, year3);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_year4;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,year4,%b]", $time, year4);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_sec1_s;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,sec1_s,%b]", $time, sec1_s);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_sec2_s;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,sec2_s,%b]", $time, sec2_s);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_min1_m;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,min1_m,%b]", $time, min1_m);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_min2_m;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,min2_m,%b]", $time, min2_m);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_hour1_h;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,hour1_h,%b]", $time, hour1_h);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_hour2_h;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,hour2_h,%b]", $time, hour2_h);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_seconds_study1;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,seconds_study1,%b]", $time, seconds_study1);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_seconds_study2;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,seconds_study2,%b]", $time, seconds_study2);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_minutes_study1;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,minutes_study1,%b]", $time, minutes_study1);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_minutes_study2;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,minutes_study2,%b]", $time, minutes_study2);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_seconds_break1;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,seconds_break1,%b]", $time, seconds_break1);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_seconds_break2;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,seconds_break2,%b]", $time, seconds_break2);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_minutes_break1;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,minutes_break1,%b]", $time, minutes_break1);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_Buzz;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,Buzz,%b]", $time, Buzz);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

endmodule

